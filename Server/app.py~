from flask import Flask
from flask import render_template
from flask import request
from werkzeug.datastructures import MultiDict
import json
import requests
import urllib2
import sqlite3
from contextlib import closing
from flask import g
from crypto import *

#configuration
DATABASE = '/tmp/MetaApp.db'
DEBUG = True
USERNAME = 'admin'
PASSWORD = 'admin'

privateKeyString=''

app = Flask(__name__)
app.config.from_object(__name__)

def connect_db():
    return sqlite3.connect(app.config['DATABASE'])

def init_db():
    with closing(connect_db()) as db:
        with app.open_resource('schema.sql', mode='r') as f:
            db.cursor().executescript(f.read())
        db.commit()

@app.before_request
def before_request():
    g.db = connect_db()

@app.teardown_request
def teardown_request(exception):
    db = getattr(g, 'db', None)
    if db is not None:
        db.close()

@app.route('/', methods=['POST', 'GET'])
def start():
	if request.method == 'POST':
		return regUser(request.form['Message'],request.form['Seed'])
	else:
		curr = g.db.execute('select id,uuid,pri_key from users')
		entries = [dict(id=row[0], uuid=row[1], pri_key=row[2]) for row in curr.fetchall()]
		return render_template('display.html',entries=entries)


def regUser(message,seed):
	with open('private.pem','rb') as f:
		privateKeyString = f.read()
	privateKey = load_private_key_string(privateKeyString)
	seed = decrypt(privateKey,seed)
	print message



@app.route('/display/', methods=['GET'])
def display():
	if request.method == 'GET':
		curr = g.db.execute('select * from messages')
		entries = [dict(id=row[0], phone_number=row[1], msg=row[2], time=row[3], sender=row[4]) for row in curr.fetchall()]
		return render_template('display.html',entries=entries)

if __name__=='__main__':
	app.run(host='0.0.0.0',debug=True)
	

